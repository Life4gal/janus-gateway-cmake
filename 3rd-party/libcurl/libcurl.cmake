pkg_check_modules(LIB_LIBCURL QUIET libcurl)

if (NOT LIB_LIBCURL_FOUND)
	if (JANUS_TURN_REST_API)
		message(FATAL_ERROR "libcurl not found. See README.md for installation instructions or set JANUS_TURN_REST_API off")
	endif (JANUS_TURN_REST_API)

	if (JANUS_HANDLER_SAMPLE)
		message(FATAL_ERROR "libcurl not found. See README.md for installation instructions or set JANUS_HANDLER_SAMPLE off")
	endif (JANUS_HANDLER_SAMPLE)

	message(FATAL_ERROR "Unexpected branch here...")
endif (NOT LIB_LIBCURL_FOUND)

if (JANUS_TURN_REST_API)
	janus_append_compile_definitions(HAVE_TURNRESTAPI)
endif (JANUS_TURN_REST_API)

if (JANUS_HANDLER_SAMPLE)
	janus_append_compile_definitions(HAVE_SAMPLEEVH)
endif (JANUS_HANDLER_SAMPLE)

set(CACHE_LIBCURL "libcurl" CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_LIBRARIES ${LIB_LIBCURL_LIBRARIES} CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_DIRECTORIES ${LIB_LIBCURL_LIBRARY_DIRS} CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_LIBRARY_NAME ${LIB_LIBCURL_LIBRARIES}-${LIB_LIBCURL_VERSION} CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_INCLUDE_DIRECTORIES ${LIB_LIBCURL_INCLUDE_DIRS} CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_COMPILE_FLAGS ${LIB_LIBCURL_CFLAGS} CACHE INTERNAL "libcurl." FORCE)
set(CACHE_LIBCURL_LD_FLAGS ${LIB_LIBCURL_LDFLAGS} CACHE INTERNAL "libcurl." FORCE)
