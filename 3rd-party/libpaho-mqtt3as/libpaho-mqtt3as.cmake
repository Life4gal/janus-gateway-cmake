function(try_use_paho_mqtt3a)
	if (NOT JANUS_TRANSPORT_MQTT AND NOT JANUS_HANDLER_MQTT)
		return()
	endif (NOT JANUS_TRANSPORT_MQTT AND NOT JANUS_HANDLER_MQTT)

	# TODO: need .pc file
	# pkg_check_modules(LIB_LIBPAHO_MQTT3AS QUIET REQUIRED libpaho_mqtt3as)

	set(LIBPAHO_MQTT3AS_PATH /usr/lib/x86_64-linux-gnu)
	set(LIB_LIBPAHO_MQTT3AS_LIBRARIES libpaho_mqtt3as)
	add_library(
			${LIB_LIBPAHO_MQTT3AS_LIBRARIES}
			SHARED
			IMPORTED
	)
	set_target_properties(
			${LIB_LIBPAHO_MQTT3AS_LIBRARIES}
			PROPERTIES
			IMPORTED_LOCATION ${LIBPAHO_MQTT3AS_PATH}/libpaho-mqtt3as.so
			IMPORTED_IMPLIB ${LIBPAHO_MQTT3AS_PATH}/libpaho-mqtt3as.a
	)

	set(CACHE_LIBPAHO_MQTT3AS "libpaho_mqtt3as" CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_LIBRARIES ${LIB_LIBPAHO_MQTT3AS_LIBRARIES} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_DIRECTORIES ${LIB_LIBPAHO_MQTT3AS_LIBRARY_DIRS} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_LIBRARY_NAME ${LIB_LIBPAHO_MQTT3AS_LIBRARIES}-${LIB_LIBPAHO_MQTT3AS_VERSION} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_INCLUDE_DIRECTORIES ${LIB_LIBPAHO_MQTT3AS_INCLUDE_DIRS} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_COMPILE_FLAGS ${LIB_LIBPAHO_MQTT3AS_CFLAGS} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
	set(CACHE_LIBPAHO_MQTT3AS_LD_FLAGS ${LIB_LIBPAHO_MQTT3AS_LDFLAGS} CACHE INTERNAL "libpaho_mqtt3as." FORCE)
endfunction(try_use_paho_mqtt3a)

try_use_paho_mqtt3a()
