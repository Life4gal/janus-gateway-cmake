function(try_use_nanomsg)
	if (NOT JANUS_TRANSPORT_NANOMSG AND NOT JANUS_HANDLER_NANOMSG)
		return()
	endif (NOT JANUS_TRANSPORT_NANOMSG AND NOT JANUS_HANDLER_NANOMSG)

	pkg_check_modules(LIB_NANOMSG QUIET nanomsg)

	if (NOT ${LIB_NANOMSG_FOUND})
		message(FATAL_ERROR "Cannot find nanomsg on your platform, install it first...")
	endif (NOT ${LIB_NANOMSG_FOUND})

	set(CACHE_NANOMSG "nanomsg" CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_LIBRARIES ${LIB_NANOMSG_LIBRARIES} CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_DIRECTORIES ${LIB_NANOMSG_LIBRARY_DIRS} CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_LIBRARY_NAME ${LIB_NANOMSG_LIBRARIES}-${LIB_NANOMSG_VERSION} CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_INCLUDE_DIRECTORIES ${LIB_NANOMSG_INCLUDE_DIRS} CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_COMPILE_FLAGS ${LIB_NANOMSG_CFLAGS} CACHE INTERNAL "nanomsg." FORCE)
	set(CACHE_NANOMSG_LD_FLAGS ${LIB_NANOMSG_LDFLAGS} CACHE INTERNAL "nanomsg." FORCE)
	
	include(CheckLibraryExists)

	CHECK_LIBRARY_EXISTS(
			${LIB_NANOMSG_LIBRARIES}
			nn_socket
			${LIB_NANOMSG_LIBRARY_DIRS}
			LIB_NANOMSG_HAS_nn_socket
	)

	if (LIB_NANOMSG_HAS_nn_socket)
		if (JANUS_TRANSPORT_RABBITMQ)
			janus_append_compile_definitions(HAVE_NANOMSG)
		endif (JANUS_TRANSPORT_RABBITMQ)

		if (JANUS_HANDLER_RABBITMQ)
			janus_append_compile_definitions(HAVE_NANOMSGEVH)
		endif (JANUS_HANDLER_RABBITMQ)
	endif (LIB_NANOMSG_HAS_nn_socket)
endfunction(try_use_nanomsg)

try_use_nanomsg()
